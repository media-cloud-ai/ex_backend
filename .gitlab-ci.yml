variables:
  POSTGRES_PASSWORD: postgres
  POSTGRES_USER: postgres
  POSTGRES_DB: step_flow_test
  BUILD_EMPTY_DIRECTORIES: priv/repo/migrations deps/step_flow/priv/repo/migrations
  CONTAINER_REGISTRY: registry.gitlab.com
  CONTAINER_IMAGE_NAME: media-cloud-ai/backend/ex_backend

services:
  - postgres:14.4-alpine
  - rabbitmq:3.8.14-alpine

stages:
    - test
    - publish

include:
  - project: 'media-cloud-ai/ci/pipelines'
    file: 'elixir/elixir-publish-docker.yml'
  - project: 'media-cloud-ai/ci/pipelines'
    file: 'elixir/elixir-base.yml'

mix_openapi:
  stage: test
  script:
    - mix openapi.backend
    - >
      if [[ $(mix openapi.backend 2>&1
      | grep -wc "warning") -ne 0 ]];
      then echo "Documentation missing !"; exit -1;
      fi

ts_lint:
  image: node:14
  tags:
    - mcai
  before_script:
    - cd ./assets
    - yarn install
    - npm install
  cache:
    paths:
      - node_modules/
  stage: test
  script:
    - npm run lint
  except:
    refs:
      - tags

ts_format:
  image: node:14
  tags:
    - mcai
  before_script:
    - cd ./assets
    - yarn install
    - npm install
  cache:
    paths:
      - node_modules/
  stage: test
  script:
    - npm run format-check
    - echo "Passed style check"
  except:
    refs:
      - tags

mix_audit:sobelow:
  stage: test
  script:
    - mix phx.audit

audit:trivy:
  stage: test
  image: docker
  services:
    - name: docker:dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    TRIVY_NO_PROGRESS: "true"
    TRIVY_CACHE_DIR: ".trivycache/"
  before_script:
    - export TRIVY_VERSION=$(wget -qO - "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
    - echo $TRIVY_VERSION
    - wget --no-verbose https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz -O - | tar -zxvf -
    - apk add --no-cache git
  script:
    - export IMAGE_TAG=`git describe --always --tags --first-parent`
    - docker build -t $CONTAINER_REGISTRY/$CONTAINER_IMAGE_NAME:$IMAGE_TAG .
    - ./trivy image --exit-code 0 --format template --template "@contrib/gitlab.tpl" -o gl-container-scanning-report.json $CONTAINER_REGISTRY/$CONTAINER_IMAGE_NAME:$IMAGE_TAG
    # Print report
    - ./trivy image --exit-code 0 --severity HIGH $CONTAINER_REGISTRY/$CONTAINER_IMAGE_NAME:$IMAGE_TAG
    # Fail on severe vulnerabilities
    - ./trivy image --exit-code 1 --severity CRITICAL $CONTAINER_REGISTRY/$CONTAINER_IMAGE_NAME:$IMAGE_TAG
  cache:
    paths:
      - .trivycache/
  # Enables https://docs.gitlab.com/ee/user/application_security/container_scanning/ (Container Scanning report is available on GitLab EE Ultimate or GitLab.com Gold)
  artifacts:
    reports:
      container_scanning: gl-container-scanning-report.json
