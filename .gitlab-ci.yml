variables:
  POSTGRES_PASSWORD: postgres
  POSTGRES_USER: postgres
  POSTGRES_DB: step_flow_test
  BUILD_EMPTY_DIRECTORIES: priv/repo/migrations deps/step_flow/priv/repo/migrations
  CONTAINER_REGISTRY: registry.gitlab.com
  CONTAINER_IMAGE_NAME: media-cloud-ai/backend/ex_backend

services:
  - postgres:12.2-alpine
  - rabbitmq:3.8.14-alpine

stages:
    - test
    - publish

include:
  - project: 'media-cloud-ai/ci/pipelines'
    file: 'elixir/elixir-publish-docker.yml'
  - project: 'media-cloud-ai/ci/pipelines'
    file: 'elixir/elixir-base.yml'

mix_openapi:
  stage: test
  script:
    - mix openapi.backend
    - >
      if [[ $(mix openapi.backend 2>&1
      | grep -wc "warning") -ne 0 ]];
      then echo "Documentation missing !"; exit -1;
      fi

ts_lint:
  image: node:14
  tags:
    - mcai
  before_script:
    - cd ./assets
    - yarn install
    - npm install
  cache:
    paths:
      - node_modules/
  stage: test
  script:
    - npm run lint
  except:
    refs:
      - tags

ts_format:
  image: node:14
  tags:
    - mcai
  before_script:
    - cd ./assets
    - yarn install
    - npm install
  cache:
    paths:
      - node_modules/
  stage: test
  script:
    - npm run format-check
    - echo "Passed style check"
  except:
    refs:
      - tags
